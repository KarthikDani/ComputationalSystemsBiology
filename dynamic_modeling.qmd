# Dynamic Modeling

## Law/Model of Mass Action

> Rate of chemical reaction is proportional to probability of collision of reactants, which is proportional to concentration of reactants

## Michaelis Menten Kinetics

> Predicts the initial rate of reaction

Assumptions:

-   Steady state where Rate of Formation of Product = Rate of Disassociation

-   Isothermal system

-   Enough concentration of molecules =\> no need to worry about probability of collision

-   Free diffusion at the site of reaction in cells and so on..

$$
E + S \rightleftharpoons^{k_1}_{k_{-1}} ES \rightleftharpoons^{k_2}_{k_{-2}} E + P
$$

where,

$\frac{dP}{dt} = k_2[ES] - k_{-2}[E][P]$

In the above equation, since the reaction is assumed for steady state, $P = 0$ hence it boils down to,

$$
\frac{dP}{dt} = k_2[ES]
$$

also,

$$
\frac{d[ES]}{dt} = k_1[E][S] - (k_{-1}[ES] + k_2[ES])
$$

$$
\frac{dS}{dt} = k_{-1}[ES] - k_1[E][S]
$$

![![](images/clipboard-2260774718.png)](images/clipboard-2993200056.png)

```{r}
# Load necessary library
library(ggplot2)

# Define the Michaelis-Menten equation function
michaelis_menten <- function(S, Vmax, Km) {
  Vmax * S / (Km + S)
}

# Define parameters
Vmax <- 10  # Maximum rate of the reaction
Km <- 5     # Michaelis constant

# Define substrate concentration range
S_values <- seq(0, 30, by = 0.1)

# Calculate reaction rate (v) using the Michaelis-Menten equation
v_values <- michaelis_menten(S_values, Vmax, Km)

# Create a data frame with substrate concentrations and reaction rates
data <- data.frame(S = S_values, v = v_values)

# Plot the Michaelis-Menten equation graph using ggplot2
plot <- ggplot(data, aes(x = S, y = v)) +
  geom_line(color = "blue") +  # Plot the Michaelis-Menten curve
  # Highlight the half-saturation point
  geom_point(aes(x = Km, y = Vmax / 2), color = "red", size = 3) +
  # Add a horizontal line at Vmax / 2
  geom_hline(yintercept = Vmax / 2, linetype = "dashed", color = "red") +
  # Add a vertical line at Km
  geom_vline(xintercept = Km, linetype = "dashed", color = "red") +
  # Add text annotations for key points
  annotate("text", x = Km, y = Vmax / 2 + 0.5, label = expression(K[m]), hjust = -0.1, color = "red") +
  annotate("text", x = max(S_values) / 2, y = Vmax, label = expression(V[max]), hjust = -0.1, color = "blue") +
  # Labels for the axes
  labs(
    title = "Michaelis-Menten Equation",
    x = "Substrate Concentration [S]",
    y = "Reaction Rate (v)"
  ) +
  # Customize the plot theme
  theme_minimal()

# Print the plot
plot


```
